   <!DOCTYPE html>
     <html>
     <head>
      <title>FileReader Example</title>

    <script type="text/javascript" charset="utf-8" src="cordova.js"></script>
    <script type="text/javascript" charset="utf-8">
    </script>
  <link rel="stylesheet" href="css/jquery.mobile-1.3.2.min.css" />
  <script src="js/jquery-1.9.1.min.js"></script>
  <script src="js/jquery.mobile-1.3.2.min.js"></script>
  <script src="js/ustadmobile-booklist.js"></script>
  <script>

var USTADDEBUGMODE = 1;

function debugLog(msg) {
    if(USTADDEBUGMODE == 1) {
        console.log(msg);
    }
}

var exeContentFileName = "index.html";

function fail(evt) {
    console.log(evt.target.error.code);
	debugLog("Something went wrong");
}

//The file that should be present in a directory to indicate this is exe content
var exeFileMarker = "index.html";

var currentPath = "/ext_card/ustadmobile";

var foldersToScan = ["/ext_card/ustadmobile", "/sdcard/ustadmobile"];

var currentFolderIndex = 0;

//the dir entries that we found inside currentFolderIndex
var currentEntriesToScan = null;

//the current index number we are working on
var currentEntriesIndex = 0;

  var fileSystem = null;

  $(document).on('pagebeforeshow', '#BooksExplorerPage', function(event) {
    populateNextDir();
   });
  

function populateNextDir() {
    if(currentFolderIndex < foldersToScan.length) {
        populate(foldersToScan[currentFolderIndex++]);
    }
}

/* 
When root dir reader fails
*/
function fail(evt) {
    debugLog(evt.target.error.code);
    populateNextDir();
}

function populate(path){
    debugLog("attempting to populate from: " + path);
    try {
        window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, function(fs){
            fileSystem = fs;
            fs.root.getDirectory(path,{create: false, exclusive: false},dirReader,fail);
        }, fail);
    } catch (e) {
        debugLog("catch!: " + dump(e));
        populateNextDir();
    }
}
  

function dirReader(dirEntry){
    var directoryReader = dirEntry.createReader();
    debugLog("dirReader Directory: " + dirEntry.fullPath);
    directoryReader.readEntries(successDirectoryReader,failDirectoryReader);
}
	
function findEXEFileMarkerSuccess(fileEntry) {
    var fileFullPath = fileEntry.fullPath;
    debugLog("Found " + fileFullPath + " is an EXE directory - adding...");
    
    var folderName = fileEntry.getParent.name; 
	$("#Explorer").append("<div style='width:104px;float:left;text-align:center;'><div><img src='res/umres/book2.png' style='border:2px;' onclick='openPage(\"" + fileFullPath + "\")'/></div><div style='width:100px;word-wrap:break-word;'>" + fileEntry.name + "</div></div>");
    scanNextDirectoryIndex();
}

function findEXEFileMarkerFail(fileEntry) {
    debugLog("failed to find file marker for " + fileEntry.name);
    scanNextDirectoryIndex();
}

function scanNextDirectoryIndex() {
    debugLog("scanNextDirectoryIndex:");
    if(currentEntriesIndex < currentEntriesToScan.length) {
        var pathToCheck = currentEntriesToScan[currentEntriesIndex].fullPath + "/" + exeFileMarker;
        currentEntriesIndex++;
		//remove file:// prefix (needed)
		pathToCheck = pathToCheck.replace("file://", "");
		debugLog("pathtoCheck: " + pathToCheck);
		//scan and see if this is really an EXE Directory
		fileSystem.root.getFile(pathToCheck, {create: false, exclusive: false}, findEXEFileMarkerSuccess, findEXEFileMarkerFail);
    }else {
        ///done looking at this directory - go to the next one
        debugLog("Scan next directory index is done");
        populateNextDir();
    }
}
    
function successDirectoryReader(entries) {
    var i;
    debugLog("In successDirectoryReader path");	
    currentEntriesToScan = new Array();
    currentEntriesIndex = 0;

    for (i=0; i<entries.length; i++) {
        if (entries[i].isDirectory) {
            currentEntriesToScan[currentEntriesToScan.length] = entries[i];
        }
    }

    scanNextDirectoryIndex();

}
function failDirectoryReader(error) {
    debugLog("Failed to list directory contents. Error code: " + error.code);
    populateNextDir();
}
function openPage(openFile){
	window.open(openFile);
}
function backPath() {
    currentPath = Left(currentPath, currentPath.lastIndexOf('/'));
    populate(currentPath);
}
function changePath(ele){
    currentPath = currentPath + "/" + $(ele).parent().next().html();
    populate(currentPath);
}
 
  </script>

  </head>
  <body>
    <h1>Ustad Mobile for Android</h1>
    <div data-role="page" id="BooksExplorerPage">
	<div data-role="header" data-position="fixed">
		<h1> Books </h1>
	</div>
	<div data-role="content">
		<div id="Explorer" style="float:left"></div>
	</div>
    </div>   
  </body>
</html>
